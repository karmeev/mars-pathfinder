name: Develop
run-name: ðŸª‚ Publish to Develop
on:
  push:
    branches: [ develop ]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/mars-pathfinder

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag.outputs.tag }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/mars-pathfinder
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DEPLOY_TOKEN }}

      - name: Generate image tag
        id: tag
        run: echo "tag=develop" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ steps.tag.outputs.tag }} -f src/nasa-server/src/Nasa.Pathfinder/kub.Dockerfile .
          docker push $IMAGE_NAME:${{ steps.tag.outputs.tag }}
          
  unit-tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.301'

      - name: Install Make
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Restore dependencies
        working-directory: ./src/nasa-server/src
        run: dotnet restore

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Add .NET tools to PATH
        run: echo "${HOME}/.dotnet/tools" >> $GITHUB_PATH

      - name: Run unit tests with coverage via Makefile
        run: make coverage

      - name: Append coverage summary to GitHub
        if: always()
        run: cat ./TestResults/CoverageReport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY

      - name: Upload full coverage report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./TestResults/CoverageReport