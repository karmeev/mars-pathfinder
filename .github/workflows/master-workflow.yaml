name: Release
run-name: ðŸš€ Release build and tag

on:
  push:
    branches: [ master ]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/mars-pathfinder

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.301'

      - name: Read version
        id: version
        run: |
          VERSION_TAG="v$(cat VERSION.txt)"
          echo "tag=$VERSION_TAG" >> $GITHUB_OUTPUT

      - name: Restore and Build
        run: |
          dotnet restore ./src/nasa-server/src/nasa-server.sln
          dotnet build ./src/nasa-server/src/nasa-server.sln --configuration Release --no-restore

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DEPLOY_TOKEN }}

      - name: Build and push Docker image with release tag
        run: |
          docker build -t $IMAGE_NAME:${{ steps.version.outputs.tag }} -f src/nasa-server/src/Nasa.Pathfinder/kub.Dockerfile .
          docker push $IMAGE_NAME:${{ steps.version.outputs.tag }}

  tag:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Git tag and push
        run: |
          VERSION_TAG="${{ needs.build.outputs.version_tag }}"
          if git rev-parse "$VERSION_TAG" >/dev/null 2>&1; then
            echo "Tag $VERSION_TAG already exists. Skipping."
            exit 0
          fi
          git config user.name "karmeev"
          git config user.email "karmeevtech@gmail.com"
          git tag $VERSION_TAG
          git push origin $VERSION_TAG