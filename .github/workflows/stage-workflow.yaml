name: Stage
run-name: 🤝 Let's test
on:
  push:
    branches: [ stage ]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/mars-pathfinder

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag.outputs.tag }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/mars-pathfinder
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DEPLOY_TOKEN }}

      - name: Generate image tag
        id: tag
        run: echo "tag=stage-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ steps.tag.outputs.tag }} -f src/nasa-server/src/Nasa.Pathfinder/kub.Dockerfile .
          docker push $IMAGE_NAME:${{ steps.tag.outputs.tag }}
  
  integration-tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.301'

      - name: Inject IMAGE_TAG into .env file
        run: echo "IMAGE_TAG=${{ needs.build.outputs.image_tag }}" >> .env

      - name: Restore and Build
        run: |
          dotnet restore ./src/nasa-server/nasa-server.sln
          dotnet build ./src/nasa-server/nasa-server.sln --configuration Release --no-restore
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DEPLOY_TOKEN }}

      - name: Start API
        run: make integration_tests_up IMAGE_TAG=${{ needs.build.outputs.image_tag }}

      - name: Run Integration Tests
        run: make test CATEGORY=Integration

      - name: Stop API
        if: always()
        run: make integration_tests_down